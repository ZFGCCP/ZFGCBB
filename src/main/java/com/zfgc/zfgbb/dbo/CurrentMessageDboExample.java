package com.zfgc.zfgbb.dbo;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.time.LocalDateTime;

public class CurrentMessageDboExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public CurrentMessageDboExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andMessageIdIsNull() {
			addCriterion("message_id is null");
			return (Criteria) this;
		}

		public Criteria andMessageIdIsNotNull() {
			addCriterion("message_id is not null");
			return (Criteria) this;
		}

		public Criteria andMessageIdEqualTo(Integer value) {
			addCriterion("message_id =", value, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdNotEqualTo(Integer value) {
			addCriterion("message_id <>", value, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdGreaterThan(Integer value) {
			addCriterion("message_id >", value, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("message_id >=", value, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdLessThan(Integer value) {
			addCriterion("message_id <", value, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdLessThanOrEqualTo(Integer value) {
			addCriterion("message_id <=", value, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdIn(List<Integer> values) {
			addCriterion("message_id in", values, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdNotIn(List<Integer> values) {
			addCriterion("message_id not in", values, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdBetween(Integer value1, Integer value2) {
			addCriterion("message_id between", value1, value2, "messageId");
			return (Criteria) this;
		}

		public Criteria andMessageIdNotBetween(Integer value1, Integer value2) {
			addCriterion("message_id not between", value1, value2, "messageId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdIsNull() {
			addCriterion("owner_id is null");
			return (Criteria) this;
		}

		public Criteria andOwnerIdIsNotNull() {
			addCriterion("owner_id is not null");
			return (Criteria) this;
		}

		public Criteria andOwnerIdEqualTo(Integer value) {
			addCriterion("owner_id =", value, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdNotEqualTo(Integer value) {
			addCriterion("owner_id <>", value, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdGreaterThan(Integer value) {
			addCriterion("owner_id >", value, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("owner_id >=", value, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdLessThan(Integer value) {
			addCriterion("owner_id <", value, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdLessThanOrEqualTo(Integer value) {
			addCriterion("owner_id <=", value, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdIn(List<Integer> values) {
			addCriterion("owner_id in", values, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdNotIn(List<Integer> values) {
			addCriterion("owner_id not in", values, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdBetween(Integer value1, Integer value2) {
			addCriterion("owner_id between", value1, value2, "ownerId");
			return (Criteria) this;
		}

		public Criteria andOwnerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("owner_id not between", value1, value2, "ownerId");
			return (Criteria) this;
		}

		public Criteria andThreadIdIsNull() {
			addCriterion("thread_id is null");
			return (Criteria) this;
		}

		public Criteria andThreadIdIsNotNull() {
			addCriterion("thread_id is not null");
			return (Criteria) this;
		}

		public Criteria andThreadIdEqualTo(Integer value) {
			addCriterion("thread_id =", value, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdNotEqualTo(Integer value) {
			addCriterion("thread_id <>", value, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdGreaterThan(Integer value) {
			addCriterion("thread_id >", value, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("thread_id >=", value, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdLessThan(Integer value) {
			addCriterion("thread_id <", value, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdLessThanOrEqualTo(Integer value) {
			addCriterion("thread_id <=", value, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdIn(List<Integer> values) {
			addCriterion("thread_id in", values, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdNotIn(List<Integer> values) {
			addCriterion("thread_id not in", values, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdBetween(Integer value1, Integer value2) {
			addCriterion("thread_id between", value1, value2, "threadId");
			return (Criteria) this;
		}

		public Criteria andThreadIdNotBetween(Integer value1, Integer value2) {
			addCriterion("thread_id not between", value1, value2, "threadId");
			return (Criteria) this;
		}

		public Criteria andMessageTextIsNull() {
			addCriterion("message_text is null");
			return (Criteria) this;
		}

		public Criteria andMessageTextIsNotNull() {
			addCriterion("message_text is not null");
			return (Criteria) this;
		}

		public Criteria andMessageTextEqualTo(String value) {
			addCriterion("message_text =", value, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextNotEqualTo(String value) {
			addCriterion("message_text <>", value, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextGreaterThan(String value) {
			addCriterion("message_text >", value, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextGreaterThanOrEqualTo(String value) {
			addCriterion("message_text >=", value, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextLessThan(String value) {
			addCriterion("message_text <", value, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextLessThanOrEqualTo(String value) {
			addCriterion("message_text <=", value, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextLike(String value) {
			addCriterion("message_text like", value, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextNotLike(String value) {
			addCriterion("message_text not like", value, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextIn(List<String> values) {
			addCriterion("message_text in", values, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextNotIn(List<String> values) {
			addCriterion("message_text not in", values, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextBetween(String value1, String value2) {
			addCriterion("message_text between", value1, value2, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageTextNotBetween(String value1, String value2) {
			addCriterion("message_text not between", value1, value2, "messageText");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdIsNull() {
			addCriterion("message_history_id is null");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdIsNotNull() {
			addCriterion("message_history_id is not null");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdEqualTo(Integer value) {
			addCriterion("message_history_id =", value, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdNotEqualTo(Integer value) {
			addCriterion("message_history_id <>", value, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdGreaterThan(Integer value) {
			addCriterion("message_history_id >", value, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("message_history_id >=", value, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdLessThan(Integer value) {
			addCriterion("message_history_id <", value, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdLessThanOrEqualTo(Integer value) {
			addCriterion("message_history_id <=", value, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdIn(List<Integer> values) {
			addCriterion("message_history_id in", values, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdNotIn(List<Integer> values) {
			addCriterion("message_history_id not in", values, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdBetween(Integer value1, Integer value2) {
			addCriterion("message_history_id between", value1, value2, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andMessageHistoryIdNotBetween(Integer value1, Integer value2) {
			addCriterion("message_history_id not between", value1, value2, "messageHistoryId");
			return (Criteria) this;
		}

		public Criteria andPostInThreadIsNull() {
			addCriterion("post_in_thread is null");
			return (Criteria) this;
		}

		public Criteria andPostInThreadIsNotNull() {
			addCriterion("post_in_thread is not null");
			return (Criteria) this;
		}

		public Criteria andPostInThreadEqualTo(Integer value) {
			addCriterion("post_in_thread =", value, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadNotEqualTo(Integer value) {
			addCriterion("post_in_thread <>", value, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadGreaterThan(Integer value) {
			addCriterion("post_in_thread >", value, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadGreaterThanOrEqualTo(Integer value) {
			addCriterion("post_in_thread >=", value, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadLessThan(Integer value) {
			addCriterion("post_in_thread <", value, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadLessThanOrEqualTo(Integer value) {
			addCriterion("post_in_thread <=", value, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadIn(List<Integer> values) {
			addCriterion("post_in_thread in", values, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadNotIn(List<Integer> values) {
			addCriterion("post_in_thread not in", values, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadBetween(Integer value1, Integer value2) {
			addCriterion("post_in_thread between", value1, value2, "postInThread");
			return (Criteria) this;
		}

		public Criteria andPostInThreadNotBetween(Integer value1, Integer value2) {
			addCriterion("post_in_thread not between", value1, value2, "postInThread");
			return (Criteria) this;
		}

		public Criteria andCreatedTsIsNull() {
			addCriterion("created_ts is null");
			return (Criteria) this;
		}

		public Criteria andCreatedTsIsNotNull() {
			addCriterion("created_ts is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedTsEqualTo(LocalDateTime value) {
			addCriterion("created_ts =", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsNotEqualTo(LocalDateTime value) {
			addCriterion("created_ts <>", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsGreaterThan(LocalDateTime value) {
			addCriterion("created_ts >", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsGreaterThanOrEqualTo(LocalDateTime value) {
			addCriterion("created_ts >=", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsLessThan(LocalDateTime value) {
			addCriterion("created_ts <", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsLessThanOrEqualTo(LocalDateTime value) {
			addCriterion("created_ts <=", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsIn(List<LocalDateTime> values) {
			addCriterion("created_ts in", values, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsNotIn(List<LocalDateTime> values) {
			addCriterion("created_ts not in", values, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsBetween(LocalDateTime value1, LocalDateTime value2) {
			addCriterion("created_ts between", value1, value2, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsNotBetween(LocalDateTime value1, LocalDateTime value2) {
			addCriterion("created_ts not between", value1, value2, "createdTs");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table zfgbb.current_message_view
	 * @mbg.generated  Wed Oct 02 23:47:38 EDT 2024
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zfgbb.current_message_view
     *
     * @mbg.generated do_not_delete_during_merge Thu Mar 10 23:39:01 EST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}