package com.zfgc.zfgbb.dbo;

import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import java.time.LocalDate;

public class EmailAddressDboExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public EmailAddressDboExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andEmailAddressIdIsNull() {
			addCriterion("email_address_id is null");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdIsNotNull() {
			addCriterion("email_address_id is not null");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdEqualTo(Integer value) {
			addCriterion("email_address_id =", value, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdNotEqualTo(Integer value) {
			addCriterion("email_address_id <>", value, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdGreaterThan(Integer value) {
			addCriterion("email_address_id >", value, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("email_address_id >=", value, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdLessThan(Integer value) {
			addCriterion("email_address_id <", value, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdLessThanOrEqualTo(Integer value) {
			addCriterion("email_address_id <=", value, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdIn(List<Integer> values) {
			addCriterion("email_address_id in", values, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdNotIn(List<Integer> values) {
			addCriterion("email_address_id not in", values, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdBetween(Integer value1, Integer value2) {
			addCriterion("email_address_id between", value1, value2, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIdNotBetween(Integer value1, Integer value2) {
			addCriterion("email_address_id not between", value1, value2, "emailAddressId");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIsNull() {
			addCriterion("email_address is null");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIsNotNull() {
			addCriterion("email_address is not null");
			return (Criteria) this;
		}

		public Criteria andEmailAddressEqualTo(String value) {
			addCriterion("email_address =", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressNotEqualTo(String value) {
			addCriterion("email_address <>", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressGreaterThan(String value) {
			addCriterion("email_address >", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressGreaterThanOrEqualTo(String value) {
			addCriterion("email_address >=", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressLessThan(String value) {
			addCriterion("email_address <", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressLessThanOrEqualTo(String value) {
			addCriterion("email_address <=", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressLike(String value) {
			addCriterion("email_address like", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressNotLike(String value) {
			addCriterion("email_address not like", value, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressIn(List<String> values) {
			addCriterion("email_address in", values, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressNotIn(List<String> values) {
			addCriterion("email_address not in", values, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressBetween(String value1, String value2) {
			addCriterion("email_address between", value1, value2, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andEmailAddressNotBetween(String value1, String value2) {
			addCriterion("email_address not between", value1, value2, "emailAddress");
			return (Criteria) this;
		}

		public Criteria andCreatedTsIsNull() {
			addCriterion("created_ts is null");
			return (Criteria) this;
		}

		public Criteria andCreatedTsIsNotNull() {
			addCriterion("created_ts is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedTsEqualTo(LocalDate value) {
			addCriterion("created_ts =", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsNotEqualTo(LocalDate value) {
			addCriterion("created_ts <>", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsGreaterThan(LocalDate value) {
			addCriterion("created_ts >", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsGreaterThanOrEqualTo(LocalDate value) {
			addCriterion("created_ts >=", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsLessThan(LocalDate value) {
			addCriterion("created_ts <", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsLessThanOrEqualTo(LocalDate value) {
			addCriterion("created_ts <=", value, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsIn(List<LocalDate> values) {
			addCriterion("created_ts in", values, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsNotIn(List<LocalDate> values) {
			addCriterion("created_ts not in", values, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsBetween(LocalDate value1, LocalDate value2) {
			addCriterion("created_ts between", value1, value2, "createdTs");
			return (Criteria) this;
		}

		public Criteria andCreatedTsNotBetween(LocalDate value1, LocalDate value2) {
			addCriterion("created_ts not between", value1, value2, "createdTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsIsNull() {
			addCriterion("updated_ts is null");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsIsNotNull() {
			addCriterion("updated_ts is not null");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsEqualTo(LocalDate value) {
			addCriterion("updated_ts =", value, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsNotEqualTo(LocalDate value) {
			addCriterion("updated_ts <>", value, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsGreaterThan(LocalDate value) {
			addCriterion("updated_ts >", value, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsGreaterThanOrEqualTo(LocalDate value) {
			addCriterion("updated_ts >=", value, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsLessThan(LocalDate value) {
			addCriterion("updated_ts <", value, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsLessThanOrEqualTo(LocalDate value) {
			addCriterion("updated_ts <=", value, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsIn(List<LocalDate> values) {
			addCriterion("updated_ts in", values, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsNotIn(List<LocalDate> values) {
			addCriterion("updated_ts not in", values, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsBetween(LocalDate value1, LocalDate value2) {
			addCriterion("updated_ts between", value1, value2, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andUpdatedTsNotBetween(LocalDate value1, LocalDate value2) {
			addCriterion("updated_ts not between", value1, value2, "updatedTs");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagIsNull() {
			addCriterion("spammer_flag is null");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagIsNotNull() {
			addCriterion("spammer_flag is not null");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagEqualTo(Boolean value) {
			addCriterion("spammer_flag =", value, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagNotEqualTo(Boolean value) {
			addCriterion("spammer_flag <>", value, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagGreaterThan(Boolean value) {
			addCriterion("spammer_flag >", value, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagGreaterThanOrEqualTo(Boolean value) {
			addCriterion("spammer_flag >=", value, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagLessThan(Boolean value) {
			addCriterion("spammer_flag <", value, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagLessThanOrEqualTo(Boolean value) {
			addCriterion("spammer_flag <=", value, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagIn(List<Boolean> values) {
			addCriterion("spammer_flag in", values, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagNotIn(List<Boolean> values) {
			addCriterion("spammer_flag not in", values, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagBetween(Boolean value1, Boolean value2) {
			addCriterion("spammer_flag between", value1, value2, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andSpammerFlagNotBetween(Boolean value1, Boolean value2) {
			addCriterion("spammer_flag not between", value1, value2, "spammerFlag");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Integer> values) {
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Integer> values) {
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table zfgbb.email_address
	 * @mbg.generated  Sun Apr 03 23:11:37 EDT 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zfgbb.email_address
     *
     * @mbg.generated do_not_delete_during_merge Sat Feb 26 22:05:37 EST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}